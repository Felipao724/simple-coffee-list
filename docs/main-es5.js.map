{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/coffe.service.ts","webpack:///src/app/coffee-card/coffee-card.component.ts","webpack:///src/app/coffee-card/coffee-card.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","coffeeService","title","allCoffeesSelected","getCoffees","getCoffeeList","subscribe","resp","coffees","filter","c","available","availableCoffees","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","CoffeService","http","get","providedIn","CoffeeCardComponent","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { CoffeService } from './coffe.service';\nimport { CoffeeModel } from './models/coffee.model';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  title = 'coffee-list';\n  allCoffeesSelected = true;\n  coffees: CoffeeModel[];\n  constructor(private coffeeService: CoffeService) {}\n\n  ngOnInit(): void {\n    this.getCoffees();\n  }\n\n  getCoffees() {\n    this.coffeeService.getCoffeeList().subscribe((resp) => {\n      this.coffees = resp;\n      this.allCoffeesSelected = true;\n    });\n  }\n\n  availableCoffees() {\n    this.coffees = this.coffees?.filter((c) => c.available);\n    this.allCoffeesSelected = false;\n  }\n}\n","<div class=\"main-container\">\n  <div class=\"header-img\">\n    <img src=\"../assets/bg-cafe.jpg\" alt=\"Imagen de fondo\" />\n  </div>\n\n  <div class=\"coffee-container\">\n    <div class=\"heading\">\n      <img src=\"../assets/vector.svg\" alt=\"\" />\n      <div class=\"title-subtitle\">\n        <h1>Our Collection</h1>\n        <p>\n          Introducing our Coffee Collection, a selection of unique coffees from\n          different roast types and origins, expertly roasted in small batches\n          and shipped fresh weekly.\n        </p>\n      </div>\n    </div>\n\n    <section class=\"filter-buttons\">\n      <button\n        [class]=\"allCoffeesSelected ? 'button-search active' : 'button-search'\"\n        (click)=\"getCoffees()\"\n      >\n        All Products\n      </button>\n      <button\n        [class]=\"!allCoffeesSelected ? 'button-search active' : 'button-search'\"\n        (click)=\"availableCoffees()\"\n      >\n        Available Now\n      </button>\n    </section>\n    <section class=\"coffee-list\">\n      <app-coffee-card\n        *ngFor=\"let coffee of coffees\"\n        [coffee]=\"coffee\"\n      ></app-coffee-card>\n    </section>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { CoffeeCardComponent } from './coffee-card/coffee-card.component';\n\n@NgModule({\n  declarations: [AppComponent, CoffeeCardComponent],\n  imports: [BrowserModule, HttpClientModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { CoffeeModel } from './models/coffee.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CoffeService {\n  constructor(private http: HttpClient) {}\n\n  public getCoffeeList(): Observable<CoffeeModel[]> {\n    return this.http.get<CoffeeModel[]>(\n      'https://raw.githubusercontent.com/devchallenges-io/web-project-ideas/main/front-end-projects/data/simple-coffee-listing-data.json'\n    );\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { CoffeeModel } from '../models/coffee.model';\n\n@Component({\n  selector: 'app-coffee-card',\n  templateUrl: './coffee-card.component.html',\n  styleUrls: ['./coffee-card.component.scss'],\n})\nexport class CoffeeCardComponent implements OnInit {\n  @Input() coffee: CoffeeModel;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<div class=\"image-container\">\n  <div class=\"popular-label\" *ngIf=\"coffee.popular\">Popular</div>\n  <img [src]=\"coffee.image\" [alt]=\"coffee.name\" />\n</div>\n<div class=\"name-price\">\n  <p>{{ coffee.name }}</p>\n  <span>{{ coffee.price }}</span>\n</div>\n<div class=\"rating-container\">\n  <div>\n    <img\n      [src]=\"\n        coffee.votes ? '../../assets/Star_fill.svg' : '../../assets/Star.svg'\n      \"\n      alt=\"\"\n    />\n    <p>{{ coffee.votes ? coffee.rating : \"\" }}</p>\n    <span class=\"votes\"\n      >{{ coffee.votes ? \"(\" + coffee.votes + \" votes)\" : \"No ratings\" }}\n    </span>\n  </div>\n  <span class=\"sold-out\" *ngIf=\"!coffee.available\">Sold out</span>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}